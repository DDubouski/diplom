#!groovy
// Run docker build
// Запрет на параллельнео исполнение билдов
properties([disableConcurrentBuilds()])

pipeline {
    agent { 
        label 'master'
        }


// Храним последних 10 билдов и их артефакты
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps() //временные отметки
    }
    stages {
        stage ("Stop docker") {
           when { expression { env.BRANCH_NAME == "master" } }
            steps {
                echo " ============== remove containers =================="
                dir('docker/helloworld'){
                    sh 'chmod +x dockerstop.sh'
                    sh 'sudo ./dockerstop.sh'
                                        }
                 }
            }


        stage("building docker image") {
            when { expression { env.BRANCH_NAME == "dev" || env.BRANCH_NAME == "master" } }
            steps {
                echo " ============== start building image =================="
                dir ('docker/helloworld') {
                	sh 'yes | sudo docker build -t ddubouski/hello-world:latest . '
                }
            }
        }
    
        stage("run docker image") {
           when { expression { env.BRANCH_NAME == "master" } }
            steps {
                echo " ============== start running image =================="
                dir ('docker/helloworld') {
                	sh 'yes | sudo docker run -d -p 80:80/tcp "ddubouski/hello-world:latest"'
                }
            }
        }        
                stage("test") {
            when { expression { env.BRANCH_NAME == "dev" || env.BRANCH_NAME == "master" } }
            steps {
                echo " ============== start testing =================="
                }
            }







        } 
        }
